facet_wrap(~RD.metric, scales='free_x', labeller = labeller(RD.metric = labeller))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())+
theme(legend.position = 'none')
p2
#ggsave(plot=last_plot(), file = here('~/Desktop/phD/Meta_Multistab/MetaMultistab/output/ResponseTraits_Resist_sum.png'), width =  6, height = 5)
p3<-Metrics %>%
ggplot(., aes ( y = Recovery, x = RD.value, color = RD.metric))+
scale_color_manual(values = c('#F8766D','#00BA38','#619CFF'))+
labs(x='')+
geom_hline(yintercept = 0)+
geom_point(size = 2, alpha = 0.8)+
facet_wrap(~RD.metric, scales='free_x', labeller = labeller(RD.metric = labeller))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())+
theme(legend.position = 'none')
p3
p4<-Metrics %>%
ggplot(., aes ( y = CV, x = RD.value, color = RD.metric))+
scale_color_manual(values = c('#F8766D','#00BA38','#619CFF'))+
labs(x='')+
geom_hline(yintercept = 0)+
geom_point(size = 2, alpha = 0.8)+
facet_wrap(~RD.metric, scales='free_x', labeller = labeller(RD.metric = labeller))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())+
theme(legend.position = 'none')
p4
plot_grid(p2,p3,p4, ncol = 1, labels = c('(a)', '(b)', '(c)'))
ggsave(plot = last_plot(), file= here('~/Desktop/phD/Meta_Multistab/MetaMultistab/output/Appendix_FigS_SumStabilityMetric.png'), width = 7, height = 8)
#### MA on Absolute OEV ####
m1<-rma.mv(OEV,unweighted,
mods = ~mean_spp_deltabm+RD_diss+RD_div,
random = ~ 1 | caseID,
method="REML",data=metadata)
summary(m1)
absModelResults <- tibble(estimate = m1$b, ci.lb = m1$ci.lb, ci.ub = m1$ci.ub, pvalue = as.numeric(m1$pval), mods = c('intercept','Mean response', 'RD dissimilarity', 'RD divergence'))
str(absModelResults)
absModelResults$mods[absModelResults$mods == 'RD divergence'] <- 'Divergence'
absModelResults$mods[absModelResults$mods == 'RD dissimilarity'] <- 'Dissimilarity'
absModelResults$mods[absModelResults$mods == 'Mean response'] <- 'Mean Response'
absModelResults$mods<- factor(absModelResults$mods, levels = c( 'intercept','Divergence','Dissimilarity','Mean Response' ))
absModelResults %>%
mutate(p.value = as.numeric(paste(ifelse(pvalue <0.05, 1, 0.95)) ))%>%
ggplot(., aes(x = estimate, y = mods, color = mods))+
geom_vline(xintercept = 0)+
geom_point(size = 3.5 )+
geom_errorbar(aes(xmin = ci.lb, xmax = ci.ub), width = .2)+
scale_color_manual(values = c('#3b3b3b','#3b3b3b','#3b3b3b','#3b3b3b'))+
labs(y = '')+
theme_bw()+
theme(axis.title.y=element_text(size=14, face="plain", colour="black",vjust=0.3),axis.text.y=element_text(size=12,colour="black",angle=0,hjust=0.4),
axis.title.x=element_text(size=14,face="plain",colour="black",vjust=0),axis.text.x=element_text(size=12,colour="black"),
panel.border=element_rect(colour="black",linewidth=1.5),
legend.position = 'none')
ggsave(plot=last_plot(), file = here('~/Desktop/phD/Meta_Multistab/Metamultistab/output/Forestplot_gg.pdf'), width = 6, height = 4)
## look at Effect sizes
summary(AllStab)
names(AllStab)
metadata <- AllStab %>%
filter(!str_detect(RD.metric, 'abs'))%>%
spread(key = RD.metric, value = RD.value)
setdiff(AllStab$caseID,metadata$caseID)
hist(metadata$OEV)
unique(metadata$studyID)
metadata <- filter(metadata, resp.cat !=  "contribution to production")
# unweighted MA requires column 1
metadata$unweighted<-1
names(metadata)
#m0
m0<-rma.mv(Deltabm.Tot,unweighted,
mods = ~mean_spp_deltabm+RD_diss+RD_div,
random = ~ 1 | caseID,
method="REML",data=metadata)
summary(m0)
ModelResults <- tibble(estimate = m0$b, ci.lb = m0$ci.lb, ci.ub = m0$ci.ub, pvalue = as.numeric(m0$pval), mods = c('intercept','Mean response', 'RD dissimilarity', 'RD divergence'))
str(ModelResults)
ModelResults$mods[ModelResults$mods == 'RD divergence'] <- 'Divergence'
ModelResults$mods[ModelResults$mods == 'RD dissimilarity'] <- 'Dissimilarity'
ModelResults$mods[ModelResults$mods == 'Mean response'] <- 'Mean Response'
ModelResults$mods<- factor(ModelResults$mods, levels = c( 'Divergence','Dissimilarity','Mean Response','intercept' ))
ModelResults %>%
mutate(p.value = as.numeric(paste(ifelse(pvalue <0.05, 1, 0.95)) ))%>%
ggplot(., aes(x = estimate, y = mods, color = mods))+
geom_vline(xintercept = 0)+
geom_point(size = 4 )+
geom_errorbar(aes(xmin = ci.lb, xmax = ci.ub), width = .2)+
annotate("text", y = "Mean Response", x = 1.1, label = "*", size = 8, color = "#22292F") +
scale_color_manual(values = c('#619CFF','#00BA38','#F8766D','#3b3b3b'))+
labs(y = '')+
theme_bw()+
theme(axis.title.y=element_text(size=14, face="plain", colour="black",vjust=0.3),axis.text.y=element_text(size=12,colour="black",angle=0,hjust=0.4),
axis.title.x=element_text(size=14,face="plain",colour="black",vjust=0),axis.text.x=element_text(size=12,colour="black"),
panel.border=element_rect(colour="black",linewidth=1.5),
legend.position = 'none')
### Stability Metrics ###
AllStab %>%
filter(!str_detect(RD.metric,'abs' ))%>%
ggplot(., aes ( x = RD.value, y = Resistance))+
geom_point()+
facet_wrap(~RD.metric, scales = 'free_x')+
theme_bw()+
labs(x = 'Realised Response Traits', y = 'Resistance')
AllStab %>%
filter(!str_detect(RD.metric,'abs' )) %>%
ggplot(., aes ( x = RD.value, y = Recovery))+
geom_point()+
facet_wrap(~RD.metric, scales = 'free_x')+
theme_bw()+
labs(x = 'Realised Response Traits', y = 'Recovery')
AllStab %>%
filter(!str_detect(RD.metric,'abs' )) %>%
ggplot(., aes ( x = RD.value, y = CV))+
geom_point()+
facet_wrap(~RD.metric, scales = 'free_x')+
theme_bw()+
labs(x = 'Realised Response Traits', y = 'Temporal Variability (CV)')
Metrics <- AllStab %>%
filter(!str_detect(RD.metric,'abs' ) & RD.metric != 'var_spp_deltabm')
Metrics$RD.metric<- factor(Metrics$RD.metric, levels = c( 'mean_spp_deltabm','RD_diss','RD_div'))
labeller <- c(mean_spp_deltabm = 'Mean Realised Response', RD_diss = 'Realised Response Dissimilarity', RD_div = 'Realised Response Divergence')
Metrics <- AllStab %>%
filter(!str_detect(RD.metric,'abs' ) & RD.metric != 'var_spp_deltabm')
Metrics$RD.metric<- factor(Metrics$RD.metric, levels = c( 'mean_spp_deltabm','RD_diss','RD_div'))
labeller <- c(mean_spp_deltabm = 'Mean Realised Response', RD_diss = 'Realised Response Dissimilarity', RD_div = 'Realised Response Divergence')
p2<-Metrics %>%
ggplot(., aes ( y = Resistance, x = RD.value, color = RD.metric))+
scale_color_manual(values = c('#F8766D','#00BA38','#619CFF'))+
labs(x='')+
geom_hline(yintercept = 0)+
geom_point(size = 2, alpha = 0.8)+
facet_wrap(~RD.metric, scales='free_x', labeller = labeller(RD.metric = labeller))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())+
theme(legend.position = 'none')
p2
p3<-Metrics %>%
ggplot(., aes ( y = Recovery, x = RD.value, color = RD.metric))+
scale_color_manual(values = c('#F8766D','#00BA38','#619CFF'))+
labs(x='')+
geom_hline(yintercept = 0)+
geom_point(size = 2, alpha = 0.8)+
facet_wrap(~RD.metric, scales='free_x', labeller = labeller(RD.metric = labeller))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())+
theme(legend.position = 'none')
p3
p4<-Metrics %>%
ggplot(., aes ( y = CV, x = RD.value, color = RD.metric))+
scale_color_manual(values = c('#F8766D','#00BA38','#619CFF'))+
labs(x='')+
geom_hline(yintercept = 0)+
geom_point(size = 2, alpha = 0.8)+
facet_wrap(~RD.metric, scales='free_x', labeller = labeller(RD.metric = labeller))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())+
theme(legend.position = 'none')
p4
plot_grid(p2,p3,p4, ncol = 1, labels = c('(a)', '(b)', '(c)'))
ggsave(plot = last_plot(), file= here('~/Desktop/phD/Meta_Multistab/MetaMultistab/output/Appendix_FigS_SumStabilityMetric.png'), width = 7, height = 8)
View(metadata)
View(allData)
unique(metadata$caseID)
v<-unique(metadata$caseID)
study_id <- v %>%
left_join(study)
study_id <- v %>%
left_join(.,study)
v<-as.data.frame(v)
study_id <- v %>%
left_join(.,study)
View(temp)
View(v)
study_id <- v %>%
rename(caseID = v)%>%
left_join(.,study)
View(study_id)
library(writexls)
install.packages('openxls')
install.packages('openxlsx')
library(openxlsx)
# for writing a data.frame or list of data.frames to an xlsx file
write.xlsx(study_id, 'study_overview.xlsx')
#### import data ####
study <- read_excel("~/Desktop/phD/Meta_Multistab/MetaMultistab/Data/Multistab_species_data.xlsx") %>%
select(-c(35:51)) %>%
rename(caseID = paper)
#### import data ####
study <- read_excel("~/Desktop/phD/Meta_Multistab/MetaMultistab/Data/Multistab_species_data.xlsx")
#### import data ####
study <- read_excel("~/Desktop/phD/Meta_Multistab/MetaMultistab/Data/Multistab_species_data.xlsx") %>%
select(-c(35:51))
#### import data ####
study <- read_excel("~/Desktop/phD/Meta_Multistab/MetaMultistab/Data/Multistab_species_data.xlsx") %>%
select(-c(35:51))
names(study)
rawData <- read_excel("~/Desktop/phD/Meta_Multistab/MetaMultistab/Multistab_species_data_mfd.xlsx",
sheet = "species data")
allData <- study%>%
select(-func, -resp.cat,-resp) %>%
merge(., rawData,by = c('caseID'))%>%
filter(spec.inf %in% c('species', 'taxa')) %>%
drop_na(caseID)
which(is.na(allData$Con.M))
communityStab <- read_excel("~/Desktop/phD/Meta_Multistab/MetaMultistab/Multistab_species_data_mfd.xlsx",
sheet = "communityFunction") %>%
select(caseID, totRR, resp, DAY, RD, RESIST, RESIL, RECOV)
# test if all data are imported correctly
unique(rawData$caseID)
unique(allData$studyID)
unique(allData$caseID)
setdiff( study$caseID,allData$caseID)
# look at data
unique(allData$species_specification)
#remove negative biomass and abundance entries!
allData$Con.M[(allData$Con.M <0)]<-0
allData$Dist.M[(allData$Dist.M <0)]<-0
response <- allData %>%
select(caseID, studyID, spec.inf, comment.x,  system, lat, long, organism, duration, differentiation,dist.cat,open,
species, species_specification,func,resp, resp.cat,DAY, RD,Con.M, Dist.M,Con.N, Dist.N, Dist.SD, Con.SD)%>%
mutate(dummyRR = Con.M + Dist.M) %>%
filter(dummyRR != 0) %>%##take out those rows where biomass is 0 in both treatment (Biomass) + control (con.bio)
group_by(caseID, RD)%>%
mutate(con.tot = sum(Con.M, na.rm = T),
dist.tot = sum(Dist.M, na.rm = T))%>%
ungroup() %>%
mutate(dist.pi = Dist.M/dist.tot,
con.pi = Con.M/con.tot,
delta.pi = dist.pi - con.pi, # calculate effect sizes
RR = (Dist.M-Con.M)/(Dist.M+Con.M),
LRR = log(dist.tot/ con.tot),
deltabm.tot = (dist.tot - con.tot)/(dist.tot+con.tot)) %>%
mutate(USI = paste(caseID, species,  sep = "_"))  %>%
filter(resp.cat != "contribution to production") %>%
distinct(caseID, studyID, spec.inf, comment.x,  system, lat, long, organism, duration, differentiation,dist.cat,open, species, species_specification,func,resp, resp.cat,DAY, RD,Con.M, Dist.M,Con.N, Dist.N,
deltabm.tot,LRR,RR,delta.pi,con.pi,dist.tot, con.tot,dist.pi,USI)
#remove infinite values for species relative proportion delta.pi and absolute biomass response ratio rr
response$delta.pi[is.infinite(response$delta.pi)]<-NA
response$RR[is.infinite(response$RR)]<-NA
response$RR[response$RR == 'NaN']<-NA
hist(response$RR)
## check if meta analysis mods are not NA
which(is.na(response$duration))
which(is.na(response$open))
which(is.na(response$resp.cat))
which(is.na(response$dist.cat))
#### AUC Loop species contributions ####
USI <- response$USI #unique identifier
#order after time steps
response <- response[order(response$RD),]
names(response)
#create empty df
stab.auc <- tibble()
for(i in 1:length(USI)){
temp<-response[response$USI==USI[i], ]#creates a temporary data frame for each case
if(dim(temp)[1]>3){#does the next step only if at least 3 data points are present
AUC.RR<-auc(temp$RD, temp$RR,  from = min(temp$RD, na.rm = TRUE), to = max(temp$RD, na.rm = TRUE),
absolutearea = FALSE)
AUC.pi<-auc(temp$RD, temp$delta.pi, from = min(temp$RD, na.rm = TRUE), to = max(temp$RD, na.rm = TRUE),
absolutearea = FALSE)
con.pi <- mean(temp$con.pi, na.rm = T)
mean.delta.pi <- mean(temp$delta.pi, na.rm = T)
mean.RR <- mean(temp$RR, na.rm = T)
sum.con <- sum(temp$Con.M)
stab.auc<-rbind(stab.auc,
tibble(temp[1,c(1:17)],
AUC.RR ,
AUC.pi ,
con.pi,
sum.con,
mean.RR,
mean.delta.pi
))
rm(temp)
}
}
### remove duplicates ###
unique(stab.auc$caseID)
str(stab.auc)
data.plot <- stab.auc %>%
distinct(caseID, studyID,system, lat, organism, duration, dist.cat, open, species, resp.cat, sum.con,AUC.RR,  AUC.pi, con.pi, mean.delta.pi,mean.RR)%>%
filter(resp.cat %in% c('abundance', 'biomass') ) %>%
ungroup() %>%
drop_na(AUC.pi)%>%
#remove studies with less than 2 species # Note: sometimes species get removed during the AUC loop
group_by(caseID) %>%
filter(n() >1)
names(data.plot)
hist(data.plot$AUC.RR)
hist(data.plot$AUC.pi)
#### AUC Loop Community Stability MA data ####
unique(communityStab$resp)
communityStab1<- communityStab %>%
filter(!resp %in% c('production', 'respiration')) %>%
drop_na(totRR) %>%
rename(resp.cat = resp)%>%
mutate(Stab.metric = paste(ifelse(RD == 1, 'Recovery', ifelse(RD==0, 'Start', ''))))
communityStab1$resp.cat[communityStab1$resp.cat == 'cover'] <-'biomass'
## create USI to run loop
USIc <- communityStab1$caseID
names(communityStab1)
#empty df
com.stab.MA <- data.frame()
for(i in 1:length(USIc)){
temp<-communityStab1[communityStab1$caseID==USIc[i], ]#creates a temporary data frame for each case
if(dim(temp)[1]>3){#does the next step only if at least 3 data points are present
OEV.MA<-auc(temp$RD, temp$totRR, from = min(temp$RD, na.rm = TRUE), to = max(temp$RD, na.rm = TRUE),
type = c("linear"),absolutearea = TRUE)
AUC.delatbm.tot.MA  <-auc(temp$RD, temp$totRR, from = min(temp$RD, na.rm = TRUE), to = max(temp$RD, na.rm = TRUE),
type = c("linear"),absolutearea = FALSE)
CV.MA<- mean(temp$totRR, na.rm = T)/sd(temp$totRR, na.rm = T) # coefficient of variation
com.stab.MA<-rbind(com.stab.MA,
data.frame(temp[1,c(1,3)],
OEV.MA,CV.MA,AUC.delatbm.tot.MA))
rm(temp)
}
}
str(com.stab.MA)
### For resistance we have to slice the first entry after the start community ##
# as sometimes we dont have information on the start community, we will split the two df
resist1 <- communityStab1%>%
group_by(caseID) %>%
filter('Start' %in% Stab.metric) %>%
arrange(caseID, RD) %>%
group_by(caseID) %>%
slice(2)
resistance.MA <- communityStab1%>%
group_by(caseID) %>%
filter(!'Start' %in% Stab.metric) %>%
arrange(caseID, RD) %>%
group_by(caseID) %>%
slice(1) %>%
bind_rows(., resist1) %>%
rename(Resist.MA = totRR) %>%
select(caseID, resp.cat, Resist.MA)
#recovery
recov.MA <- communityStab1 %>%
filter(RD == 1) %>%
rename(Recov.MA = totRR) %>%
distinct(caseID, resp.cat,Recov.MA)
com.stab.MA.all <- com.stab.MA %>%
distinct(caseID, resp.cat, AUC.delatbm.tot.MA,OEV.MA,CV.MA) %>%
left_join(., recov.MA) %>%
left_join(., resistance.MA)
summary(com.stab.MA.all)
#remove duplicates (if there are any)
CommunityStab.MA <- distinct(com.stab.MA.all, caseID, resp.cat, OEV.MA,AUC.delatbm.tot.MA, Recov.MA, Resist.MA, CV.MA)
#### R script for meta analysis ####
graphics.off()
library(tidyverse)
library(readxl)
library(here)
library(cowplot)
library(GGally)
library(ggpubr)
library(ggpmisc)
library(metafor)
# species stability
SpeciesStab <- read_csv('~/Desktop/phD/Meta_Multistab/MetaMultistab/output/SpeciesStabilities.csv')%>%  select(-'...1')
# community stability
ComStab <- read_csv('~/Desktop/phD/Meta_Multistab/MetaMultistab/output/CommunityStabilities.csv')%>%  select(-'...1') %>%
rename(Deltabm.Tot = AUC.sum.delatbm.tot,
Recovery=Recov,
Resistance=Resist)
source(here("~/Desktop/phD/Meta_Multistab/response-diversity-pulse-pert/R/0-functions/Ross_et_al_functions.R"))
names(SpeciesStab)
realised.pert <- SpeciesStab %>%
group_by(caseID, resp.cat) %>%
reframe(mean_spp_deltabm = mean(AUC.RR),
var_spp_deltabm = var(AUC.RR),
RD_diss = resp_div(AUC.RR, sign_sens = FALSE),
RD_div = resp_div(AUC.RR, sign_sens = TRUE),
mean_abs_spp_deltabm = mean(abs(AUC.RR)),
var_abs_spp_deltabm = var(abs(AUC.RR)),
RD_abs_diss = resp_div(abs(AUC.RR), sign_sens = FALSE),
RD_abs_div = resp_div(abs(AUC.RR), sign_sens = TRUE)) %>%
ungroup()%>%
gather(mean_spp_deltabm,var_spp_deltabm,RD_diss,RD_div, mean_abs_spp_deltabm,var_abs_spp_deltabm,RD_abs_div,RD_abs_diss,key = 'RD.metric', value = 'RD.value')
##### Plot - Sum Community Stability ####
AllStab <- merge(realised.pert,ComStab, by = c('caseID', 'resp.cat')) %>%
filter(!str_detect(RD.metric,'abs' ))
str(AllStab)
#label grid
labeller <- c(mean_spp_deltabm = 'Mean Realised Response', RD_diss = 'Response Dissimilarity', RD_div = 'Response Divergence')
P_Fig4a <- AllStab %>%
filter(!str_detect(RD.metric,'abs' ) & RD.metric == 'mean_spp_deltabm' ) %>%
ggplot(aes(x = RD.value, y = Deltabm.Tot))+
geom_hline(yintercept = 0)+  #  stat_poly_eq()+
geom_point(alpha = 0.8, size = 2, color = '#F8766D')+
labs(x = 'Mean Realised Response', y = 'OEV')+
# facet_wrap(~RD.metric, scale = 'free_x', labeller = labeller(RD.metric = labeller))+
theme_bw()+
theme(axis.title.y=element_text(size=12, face="plain", colour="black",vjust=0.3),axis.text.y=element_text(size=10,face="plain",colour="black",angle=0,hjust=0.4))+
theme(axis.title.x=element_text(size=12,face="plain",colour="black",vjust=0),axis.text.x=element_text(size=10,face="plain",colour="black"))+
theme(legend.position = 'none')
P_Fig4a
P_Fig4b <- AllStab %>%
filter(!str_detect(RD.metric,'abs' ) & RD.metric == 'RD_diss') %>%
ggplot(aes(x = RD.value, y = Deltabm.Tot))+
geom_hline(yintercept = 0)+  #  stat_poly_eq()+
geom_point(alpha = 0.8, size = 2, color = '#00BA38')+
labs(x = 'Realised Response Dissimilarity', y = 'OEV')+
# facet_wrap(~RD.metric, scale = 'free_x', labeller = labeller(RD.metric = labeller))+
theme_bw()+
theme(axis.title.y=element_text(size=12, face="plain", colour="black",vjust=0.3),axis.text.y=element_text(size=10,face="plain",colour="black",angle=0,hjust=0.4))+
theme(axis.title.x=element_text(size=12,face="plain",colour="black",vjust=0),axis.text.x=element_text(size=10,face="plain",colour="black"))+
theme(legend.position = 'none')
P_Fig4b
P_Fig4c <- AllStab %>%
filter(!str_detect(RD.metric,'abs' ) & RD.metric == 'RD_div') %>%
ggplot(aes(x = RD.value, y = Deltabm.Tot))+
geom_hline(yintercept = 0)+  #  stat_poly_eq()+
geom_point(alpha = 0.8, size = 2, color = '#619CFF')+
labs(x = 'Realised Response Divergence', y = 'OEV')+
#facet_wrap(~RD.metric, scale = 'free_x', labeller = labeller(RD.metric = labeller))+
theme_bw()+
theme(axis.title.y=element_text(size=12, face="plain", colour="black",vjust=0.3),axis.text.y=element_text(size=10,face="plain",colour="black",angle=0,hjust=0.4))+
theme(axis.title.x=element_text(size=12,face="plain",colour="black",vjust=0),axis.text.x=element_text(size=10,face="plain",colour="black"))+
theme(legend.position = 'none')
P_Fig4c
plot_grid(P_Fig4a, P_Fig4b, P_Fig4c, ncol = 3, labels = c('(a)', '(b)', '(c)'))
ggsave(plot = last_plot(), file = here('output/Fig4_RealisedResponses_OEV.png'), width = 10, height = 3.5)
#libraries we need
library(metafor)
library(broom)
## look at Effect sizes
summary(AllStab)
names(AllStab)
metadata <- AllStab %>%
filter(!str_detect(RD.metric, 'abs'))%>%
spread(key = RD.metric, value = RD.value)
setdiff(AllStab$caseID,metadata$caseID)
hist(metadata$OEV)
unique(metadata$studyID)
metadata <- filter(metadata, resp.cat !=  "contribution to production")
# unweighted MA requires column 1
metadata$unweighted<-1
names(metadata)
#m0
m0<-rma.mv(Deltabm.Tot,unweighted,
mods = ~mean_spp_deltabm+RD_diss+RD_div,
random = ~ 1 | caseID,
method="REML",data=metadata)
summary(m0)
ModelResults <- tibble(estimate = m0$b, ci.lb = m0$ci.lb, ci.ub = m0$ci.ub, pvalue = as.numeric(m0$pval), mods = c('intercept','Mean response', 'RD dissimilarity', 'RD divergence'))
str(ModelResults)
ModelResults$mods[ModelResults$mods == 'RD divergence'] <- 'Divergence'
ModelResults$mods[ModelResults$mods == 'RD dissimilarity'] <- 'Dissimilarity'
ModelResults$mods[ModelResults$mods == 'Mean response'] <- 'Mean Response'
ModelResults$mods<- factor(ModelResults$mods, levels = c( 'Divergence','Dissimilarity','Mean Response','intercept' ))
ModelResults %>%
mutate(p.value = as.numeric(paste(ifelse(pvalue <0.05, 1, 0.95)) ))%>%
ggplot(., aes(x = estimate, y = mods, color = mods))+
geom_vline(xintercept = 0)+
geom_point(size = 4 )+
geom_errorbar(aes(xmin = ci.lb, xmax = ci.ub), width = .2)+
annotate("text", y = "Mean Response", x = 1.1, label = "*", size = 8, color = "#22292F") +
scale_color_manual(values = c('#619CFF','#00BA38','#F8766D','#3b3b3b'))+
labs(y = '')+
theme_bw()+
theme(axis.title.y=element_text(size=14, face="plain", colour="black",vjust=0.3),axis.text.y=element_text(size=12,colour="black",angle=0,hjust=0.4),
axis.title.x=element_text(size=14,face="plain",colour="black",vjust=0),axis.text.x=element_text(size=12,colour="black"),
panel.border=element_rect(colour="black",linewidth=1.5),
legend.position = 'none')
ggsave(plot=last_plot(), file = here('~/Desktop/phD/Meta_Multistab/Metamultistab/output/Forestplot_gg.pdf'), width = 6, height = 4)
Metrics <- AllStab %>%
filter(!str_detect(RD.metric,'abs' ) & RD.metric != 'var_spp_deltabm')
Metrics$RD.metric<- factor(Metrics$RD.metric, levels = c( 'mean_spp_deltabm','RD_diss','RD_div'))
labeller <- c(mean_spp_deltabm = 'Mean Realised Response', RD_diss = 'Realised Response Dissimilarity', RD_div = 'Realised Response Divergence')
p2<-Metrics %>%
ggplot(., aes ( y = Resistance, x = RD.value, color = RD.metric))+
scale_color_manual(values = c('#F8766D','#00BA38','#619CFF'))+
labs(x='')+
geom_hline(yintercept = 0)+
geom_point(size = 2, alpha = 0.8)+
facet_wrap(~RD.metric, scales='free_x', labeller = labeller(RD.metric = labeller))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())+
theme(legend.position = 'none')
p2
p3<-Metrics %>%
ggplot(., aes ( y = Recovery, x = RD.value, color = RD.metric))+
scale_color_manual(values = c('#F8766D','#00BA38','#619CFF'))+
labs(x='')+
geom_hline(yintercept = 0)+
geom_point(size = 2, alpha = 0.8)+
facet_wrap(~RD.metric, scales='free_x', labeller = labeller(RD.metric = labeller))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())+
theme(legend.position = 'none')
p3
p4<-Metrics %>%
ggplot(., aes ( y = CV, x = RD.value, color = RD.metric))+
scale_color_manual(values = c('#F8766D','#00BA38','#619CFF'))+
labs(x='')+
geom_hline(yintercept = 0)+
geom_point(size = 2, alpha = 0.8)+
facet_wrap(~RD.metric, scales='free_x', labeller = labeller(RD.metric = labeller))+
theme_bw()+
theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank())+
theme(legend.position = 'none')
p4
plot_grid(p2,p3,p4, ncol = 1, labels = c('(a)', '(b)', '(c)'))
ggsave(plot = last_plot(), file= here('~/Desktop/phD/Meta_Multistab/MetaMultistab/output/Appendix_FigS_SumStabilityMetric.png'), width = 7, height = 8)
write.csv(data.plot, file = here('~/Desktop/phD/Meta_Multistab/MetaMultistab/output/SpeciesStabilities.csv'))
ComStab <- write_csv(CommunityStab.MA, file = here('~/Desktop/phD/Meta_Multistab/MetaMultistab/output/CommunityStabilities.csv'))
write_csv(CommunityStab.MA, file = here('~/Desktop/phD/Meta_Multistab/MetaMultistab/output/CommunityStabilities.csv'))
plot_grid(P_Fig4a, P_Fig4b, P_Fig4c, ncol = 3, labels = c('(a)', '(b)', '(c)'))
ggsave(plot = last_plot(), file = here('output/Fig4_RealisedResponses_OEV.png'), width = 10, height = 3.5)
ggsave(plot = last_plot(), file = here('MetaMultistab/output/Fig4_RealisedResponses_OEV.png'), width = 10, height = 3.5)
source(here("/Users/charlottekunze/Desktop/phD/Meta_Multistab/MetaMultistab/code/02_MetaMultistab_Analysis.R"))
write_csv(CommunityStab.MA, file = here('~/MetaMultistab/Data/CommunityStabilities.csv'))
